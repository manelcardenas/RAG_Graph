[build-system]
#Defines how the Python package is built
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"
# setuptools is the default build system for Python packages
# wheel is the format for distributing Python packages (better than tar.gz...)
# build-backend is the backend for the build system (alternatives like poetry, flit, etc.)

[project]
name = "rag_graph"
version = "0.1.0"
description = "RAG project using Neo4j and LLM"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    # Basic packages
    "python-dotenv>=1.0.1",  # To load environment variables

    # Neo4j
    "neo4j>=5.28.1",  # Neo4j driver

    #Langchain y components
    "langchain-community>=0.3.17",  # For TextLoader
    "langchain-text-splitters>=0.3.6",  # For RecursiveCharacterTextSplitter
    "langchain-ollama>=0.2.3",  # For ChatOllama
    "langchain-experimental>=0.3.4",  # For LLMGraphTransformer
    "langchain-openai>=0.3.6",  # For ChatOpenAI
]

[project.optional-dependencies]
dev = [
    "ruff>=0.6.9",
    "pytest>=8.0.0",
    "pre-commit>=3.5.0",
]

[project.scripts]
rag-graph = "rag_graph.cli:main"

[tool.setuptools]
package-dir = {"" = "src"}
packages = ["rag_graph"]

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "N",  # PEP8 naming conventions
    "D",  # pydocstyle
    "S",  # flake8-bandit (security)
    "ARG",  # flake8-unused-arguments
    "SIM",  # flake8-simplify
]
ignore = [
     "C901",  # too complex
    "W191",  # indentation contains tabs
    "D401",  # imperative mood
    "E501",  # line too long (handled by line-length)
    "D100",  # missing docstring in public module
    "D104",  # missing docstring in private module
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]

[[tool.uv.index]]
name = "pypi"
url = "https://pypi.org/simple"


